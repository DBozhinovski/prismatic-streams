#!/usr/bin/env coffee

## A CLI interface for the prismatic lib
## Created for testing purposes, use ffmpeg directly if you need a CLI interpreter for transcoding!

program = require "commander"
{Plumbing, Formatter} = require "../dist/libprismatic"
plumbing = new Plumbing

## expose to CLI
program
  .option('-d, --do [task]', 'The task to do [run]', 'run')
  .option('-i, --input [input]', 'Input path')
  .option('-a --audio_codec [audio_codec]', 'Audio codec', 'aac -strict experimental')
  .option('-v --video_codec [video_codec]', 'Video codec', 'libx264')
  .option('-o, --output [output]', 'Output path')
  .option('-r, --resolution [resolution]', 'Resolution', '1024x768')
  .option('-t, --time [time]', 'Time', '120')
  .parse process.argv

plumbing.once 'started', (pid) -> console.log pid

switch program.do
  when 'meta'
    plumbing.info program.input, (out) -> console.log JSON.parse(out)
  when 'run'
    plumbing.info program.input, (out) ->
      meta = JSON.parse(out)
      plumbing.run("-i #{program.input} -acodec #{program.audio_codec} 
      -vcodec #{program.video_codec} #{program.output}")
      .pipe(Formatter.toJSON())
      .pipe(Formatter.percents(meta.streams[0].nb_frames))
      .pipe process.stdout
  when 'thumbnail', 'th'
    plumbing.run("-i #{program.input} -ss #{program.time} -s #{program.resolution} -vframes 1 -an #{program.output}")
  else
    console.log "Unknown command. Type -h / --help for a list of commands."
