// Generated by CoffeeScript 1.6.3
(function() {
  var Plumbing, Readable, exec, fs, spawn, _ref;

  _ref = require("child_process"), spawn = _ref.spawn, exec = _ref.exec;

  fs = require("fs");

  Readable = require("stream").Readable;

  Plumbing = (function() {
    function Plumbing() {}

    Plumbing.instance = function(options) {
      var rs,
        _this = this;
      rs = new Readable;
      rs._read = function() {};
      exec("ffmpeg -loglevel error -t 1 " + (options.slice(0, -1).join(' ')) + " -f null /dev/null", function(error, stdout, stderr) {
        if (error) {
          throw error.toString().trim();
        } else if (stderr) {
          throw stderr.toString().trim();
        } else {
          return fs.writeFile('dummy.sh', "ffmpeg " + (options.join(' ')), function(error) {
            var ff;
            ff = spawn("sh", ["dummy.sh"]);
            ff.stderr.on("data", function(out) {
              return rs.push(out);
            });
            return ff.stdout.on("close", function() {
              return rs.push(null);
            });
          });
        }
      });
      return rs;
    };

    Plumbing.meta = function(path, next) {
      return exec("ffprobe -v quiet -print_format json -show_format -show_streams " + path, function(error, stdout, stderr) {
        if (error) {
          throw error;
        } else {
          return next(stdout);
        }
      });
    };

    return Plumbing;

  })();

  module.exports = Plumbing;

}).call(this);
